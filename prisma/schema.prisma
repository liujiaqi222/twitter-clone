// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// 其中，id字段被指定为主键"@id"，并使用"@default(auto())"设置为自动生成值，
// 同时使用"@map("_id")"将其映射到MongoDB的"_id"字段上。另外，"@db.ObjectId"将其映射到MongoDB的ObjectId类型。

model User {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  name             String?
  username         String?   @unique
  bio              String?
  email            String?   @unique
  emailVerified    DateTime?
  image            String?
  coverImage       String?
  profile          String?
  hashedPassword   String?
  createdAt        DateTime? @default(now())
  updatedAt        DateTime? @updatedAt
  followingIds     String[]  @db.ObjectId
  hasNotifications Boolean?

  posts        Post[]
  comments     Comment[]
  notfications Notification[]
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @db.ObjectId
  likedIds  String[] @db.ObjectId

  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  comments Comment[]
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @db.ObjectId
  postId    String   @db.ObjectId

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Notification {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  body      String
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
